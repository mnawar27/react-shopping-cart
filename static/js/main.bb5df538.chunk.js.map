{"version":3,"sources":["Item/Item.styles.ts","Item/Item.tsx","CartItem/CartItem.styles.ts","CartItem/CartItem.tsx","Cart/Cart.styles.tsx","Cart/Cart.tsx","App.styles.ts","App.tsx","index.tsx"],"names":["Wrapper","styled","div","Item","item","handleAddToCart","src","image","alt","title","description","price","Button","onClick","CartItem","addToCart","removeFromCart","className","amount","toFixed","size","disableElevation","variant","id","aside","Cart","items","cartItems","length","map","reduce","ack","StyledButton","IconButton","getProducts","a","fetch","json","App","useState","cartOpen","setCartOpen","setCartItems","useQuery","data","isLoading","error","console","log","clickedItem","prev","find","LinearProgress","Drawer","anchor","open","onClose","Badge","badgeContent","color","Grid","container","spacing","xs","sm","client","QueryClient","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bb5df538.chunk.js","sourcesContent":["//import { CardContent } from '@material-ui/core';\n//import { lightBlue } from '@material-ui/core/colors';\n//import { AirlineSeatLegroomExtra, ContactPhoneTwoTone, ViewColumn } from '@material-ui/icons';\n//import { findByLabelText } from '@testing-library/dom';\nimport styled from 'styled-components';\n \nexport const Wrapper = styled.div`\n   display: flex;\n   justify-content: space-between;\n   flex-direction: column;\n   width: 100%;\n   border: 1px solid lightBlue;\n   border-radius: 20px;\n   height: 100%;\n \n   button {\n      border-radius: 0 0 20px 20px;\n   }\n   \n   img{\n      mzx-height: 250px;\n      object-fit: cover;\n      border-radius: 20px 20px 0 0;\n   }\n   \n   div {\n      font-family: Arial, Helvetica, sans-sarif;\n      padding: 1rem;\n      height: 100%;\n   }\n   `;","import Button from '@material-ui/core/Button';\n//Types\nimport { CartItemType } from '../App';\n//Styles\nimport { Wrapper } from './Item.styles';\n \ntype Props = {\n   item: CartItemType;\n   handleAddToCart: (clickedItem: CartItemType) => void;\n}\n \nconst Item: React.FC<Props> = ({item, handleAddToCart})=> (\n   <Wrapper>\n       <img src = {item.image} alt = {item.title} />\n       <div>\n           <h3> {item.title}</h3>\n           <p>{item.description}</p>\n           <h3>${item.price}</h3>\n       </div>\n       <Button onClick={() => handleAddToCart(item)}> Add to cart</Button>\n   </Wrapper>\n)\n\nexport default Item;","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n    display: flex;\n    justify-content: space-between;\n    font-family: Arial, Helvetica, sans-serif;\n    border-bottom: 1px solid lightblue;\n    padding-bottom: 20px;\n\n    div{\n        flex: 1;\n    }\n\n    .information, .buttons {\n        display: flex;\n        justify-content: space-between;\n    }\n    img{\n        max-width: 80px;\n        object-fit: cover;\n        margin-left: 40px;\n    }\n`;","import Button from '@material-ui/core/Button'\n//import Item from '../Item/Item';\n\n//Types\nimport { CartItemType} from '../App';\n\n//Styles\nimport { Wrapper } from './CartItem.styles';\n\ntype Props = {\n    item: CartItemType;\n    addToCart: (clickedItem: CartItemType) => void;\n    removeFromCart: (id:number) =>void;\n}\n\nconst CartItem: React.FC<Props> = ({item, addToCart, removeFromCart}) => (\n    <Wrapper>\n        <div>\n            <h3>\n                {item.title}\n            </h3>\n            <div className = \"information\">\n                <p>Price: ${item.price}</p>\n                <p> Total: ${(item.amount * item.price).toFixed(2)}</p>\n            </div>\n            <div className = \"buttons\">\n            <Button \n            size = \"small\"\n            disableElevation\n            variant = \"contained\"\n            onClick = {() => removeFromCart(item.id)}\n            > \n            -\n            </Button>\n            <p>{item.amount}</p>\n            <Button \n            size = \"small\"\n            disableElevation\n            variant = \"contained\"\n            onClick = {() => addToCart(item)}\n            > \n            +\n            </Button>\n            </div>\n        </div>\n        <img src = {item.image} alt = {item.title} />\n    </Wrapper>\n\n);\n export default CartItem;","import styled from 'styled-components';\n\nexport const Wrapper = styled.aside`\nfont-family: Arial, Helvetica, sans-serif;\nwidth: 500px;\npadding: 20px;\n`;","import CartItem from '../CartItem/CartItem';\n//Styles\nimport {Wrapper} from './Cart.styles'\n//Types\nimport { CartItemType } from '../App'\n\ntype Props = {\n    cartItems: CartItemType[];\n    addToCart: (clickedItem: CartItemType)=> void;\n    removeFromCart: (id: number) => void;\n};\n\nconst Cart: React.FC<Props> = ({ cartItems, addToCart, removeFromCart}) => {\n    const calculateTotal = (items: CartItemType[]) =>\n    items.reduce((ack : number, item) => ack + item.amount * item.price, 0)\n    return (\n        <Wrapper>\n            <h2> Your Shopping Cart</h2>\n            {cartItems.length === 0 ? <p> No items in cart.</p> : null}\n            {cartItems.map(item=>(\n                <CartItem \n                key = {item.id}\n                item = {item}\n                addToCart = {addToCart}\n                removeFromCart = {removeFromCart}\n                \n                />\n            ))}\n            <h2> Total: ${calculateTotal(cartItems).toFixed(2)}</h2>\n        </Wrapper>\n    );\n};\n\nexport default Cart;","import styled from 'styled-components';\nimport IconButton from '@material-ui/core/IconButton'\n\nexport const Wrapper = styled.div`\nmargin: 40px;\n`;\n\nexport const StyledButton = styled(IconButton)`\nposition: fixed;\nz-index: 100;\nright: 20px;\ntop: 20px;\n\n\n`","import { useState } from 'react'\nimport { useQuery } from 'react-query'\n//Components\nimport Item from './Item/Item';\nimport Cart from './Cart/Cart';\nimport Drawer from '@material-ui/core/Drawer';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Grid from '@material-ui/core/Grid';\nimport AddShoppingCartIcon from '@material-ui/icons/AddShoppingCart';\nimport Badge from '@material-ui/core/Badge';\n\n//Styles\nimport { Wrapper, StyledButton } from './App.styles';\n//Types\nexport type CartItemType = {\n  id: number;\n  category: string;\n  description: string;\n  image: string;\n  price: number;\n  title: string;\n  amount: number;\n}\n\nconst getProducts = async (): Promise<CartItemType[]> =>\nawait (await fetch ('https://fakestoreapi.com/products')).json();\n\nconst App = () => {\n  const [cartOpen, setCartOpen] = useState(false);\n  const [cartItems, setCartItems]= useState([] as CartItemType[])\n  const { data, isLoading, error } = useQuery<CartItemType[]>(\n    'products', \n    getProducts\n    );\n    console.log(data);\n\nconst getTotalItems = (items: CartItemType[]) => \n  items.reduce((ack: number, item) => ack + item.amount, 0);\nconst handleAddToCart = (clickedItem: CartItemType) => {\n  setCartItems(prev => {\n    //1. is the item already added in the cart?\n    const isItemInCart = prev.find(item => item.id === clickedItem.id);\n\n    if (isItemInCart){\n      return prev.map (item => \n        item.id === clickedItem.id\n        ? {...item, amount: item.amount + 1}\n        : item\n        );\n    }\n    //First time the item is added\n    return [...prev, {...clickedItem, amount: 1}]\n  });\n};\nconst handleRemoveFromCart = (id: number) => {\n  setCartItems(prev => (\n    prev.reduce((ack, item)=>{\n      if (item.id === id) {\n        if(item.amount === 1)  return ack;\n        return [...ack, {...item, amount: item.amount -1}]\n      } else {\n        return [...ack, item];\n      }\n\n    }, [] as CartItemType[])\n     \n  ))\n};\n\nif (isLoading) return <LinearProgress />;\nif (error) return <div> Something went wrong ... </div>\n\n  return (\n    <Wrapper>\n      <Drawer anchor = 'right' open = {cartOpen} onClose = {() => setCartOpen(false)}>\n        <Cart \n          cartItems = {cartItems} addToCart ={handleAddToCart} \n          removeFromCart = {handleRemoveFromCart}\n          />\n      </Drawer>\n      <StyledButton onClick = {()=> setCartOpen(true)}>\n        <Badge badgeContent = {getTotalItems(cartItems)} color = 'error'>\n          <AddShoppingCartIcon />\n\n        </Badge>\n        </StyledButton>\n\n\n      <Grid container spacing = {3}>\n        {data?.map(item => (\n          <Grid item key = {item.id} xs={12} sm={4}>\n            <Item item = {item} handleAddToCart = {handleAddToCart} />\n          </Grid>\n          ))}\n      </Grid>\n    </Wrapper>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { QueryClient, QueryClientProvider } from 'react-query';\n\nconst client = new QueryClient();\nReactDOM.render(\n  <QueryClientProvider client= {client}>\n     <App />,\n  </QueryClientProvider>,\n document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}